@model List<ContactViewModel>
@{
    ViewBag.Title = "Contacts";
}
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">    
    <p style="position: absolute; top: 30%; left: 45%; color: White;">
        Updating ACT, please wait...<img src="~/Content/BlueOpal/loading-image.gif">
    </p>
</div>
<div class="text-right">
    <h4><a href="/APFW/Home/HomeShell.aspx" class="button tiny round">act!</a></h4>
</div>
<div class="text-center" >
    <h3>Contact Integration</h3>
</div>
    <p class="success">@ViewBag.Message</p>
    <table class="table-display">
        <thead>
            <tr>
                <th>Name</th>
                <th>Organization</th>
                <th>Phone/Email Address</th>
                <th>Address</th>
                <th>Notes</th>
                <th>Attachment</th>
                <th>Inquiry Date</th>
                <th>Already in Database?</th>
                <th>Action</th>
                <th>Assign Sales Rep?</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @for (int index = 0; index < Model.Count; index++)
            {
                <tr id="@Model[index].ContactID">
                    <td>
                        @Html.HiddenFor(m => m[index].ContactID)
                        @(Model[index].FirstName + " " + Model[index].LastName)
                    </td>
                    <td>@Model[index].Organization</td>
                    <td>@Model[index].Phone<br>@Model[index].EmailAddress</td>
                    <td>
                        @Model[index].StreetAddress<br>
                        @Model[index].City<br>
                        @Model[index].State @Model[index].Zip
                    </td>
                    <td>
                        <a href="#" onclick="return loadNotesWindow('@("notes" + Model[index].ContactID)', '@(Model[index].FirstName + " " + Model[index].LastName)', 'Notes')">Notes</a>
                        <div id="@("notes" + Model[index].ContactID)" style="display: none; white-space: pre;">@Model[index].Notes</div>
                    </td>
                    <td>
                        @if (Model[index].AttachmentUrl != null)
                        {
                            <a href="#" onclick="return loadNotesWindow('@("notesimage" + Model[index].ContactID)', '@(Model[index].FirstName + " " + Model[index].LastName)', 'Attachment')">Image</a>
                            <div id="@("notesimage" + Model[index].ContactID)" style="display: none; white-space: pre;">
                                <img src="@Url.Content("~/Data/" + Model[index].AttachmentUrl)" />
                            </div>
                        }
                    </td>
                    <td>@Model[index].CreateDate</td>
                    <td>@(Model[index].DuplicateInd ? "Yes" : "No")</td>
                    <td nowrap="nowrap">
                        <ul class="no-bullet">
                            @foreach (var opt in Model[index].ActionOptions)
                            {
                                string optId = Model[index].ContactID.ToString() + "-action-" + opt.Value;
                                object optattributes = new { id = optId, @class = "tight" };

                                <li>
                                    @Html.RadioButtonFor(m => m[index].Action, opt.Value, optattributes)
                                    <label for="@optId" class="radio-margin">@opt.Text</label>
                                </li>
                            }
                        </ul>

                    </td>
                    <td>
                        @{
                            string selectid = Model[index].ContactID.ToString() + "-rep";
                            object selectattributes = new { id = selectid };
                        }
                        @Html.DropDownListFor(m => m[index].SalesRep, Model[index].Users, selectattributes)
                    </td>
                    <td>
                        @Html.HiddenFor(m => m[index].Task)
                        <a href="#" class="button tiny round" onclick="UpdateContact(@Model[index].ContactID.ToString(), '@Url.Content("~/api/contactact")')">Update ACT</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
